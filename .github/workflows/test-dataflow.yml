name: Test (Google Dataflow)

on:
  push:
  workflow_dispatch:

jobs:
  dupe_check:
    name: Check for Duplicate Workflow Run
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          concurrent_skipping: same_content
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  build:
    name: Integration Tests
    needs:
      - dupe_check
    if: needs.dupe_check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        beam-version: [ "", "2.20.0", "2.25.0" ]
        experiments: [ "", "use_sdf_read", "use_deprecated_read" ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-test-dataflow-${{ matrix.beam-version }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-dataflow-${{ matrix.beam-version }}-
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - name: Setup GCP SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Install Test Support
        run: mvn clean install -f solace-integration-test-support/ -DskipTests
      - name: Select Test Suite
        id: test-suite-selector
        run: |
          if [[ -n "${{ matrix.beam-version }}" ]]; then
            if [[ "${{ github.event_name }}" != 'push' ]] || [[ "${{ github.ref }}" =~ ^refs\/(heads\/master|tags\/.+)$ ]]; then
              echo 'Will run expanded minimal test suite'
              echo "::set-output name=it-tests::${EMIN_TEST_SUITE}"
            else
              echo 'Will run minimal test suite'
              echo "::set-output name=it-tests::${MIN_TEST_SUITE}"
            fi
          elif [[ "${{ github.event_name }}" == 'push' ]] && [[ "${{ github.ref }}" == refs/heads/* ]] && [[ "${{ github.ref }}" != 'refs/heads/master' ]]; then
            echo 'Will run minimal test suite'
            echo "::set-output name=it-tests::${MIN_TEST_SUITE}"
          else
            echo 'Will run full test suite'
          fi
        env:
          MIN_TEST_SUITE: SolaceIOIT#testBasic,SolaceRecordTestIT#testBasic
          EMIN_TEST_SUITE: SolaceIOIT#testBasic,SolaceRecordTestIT#testBasic,*DataflowIT
      - name: Build and Run Tests
        run: >-
          mvn clean verify
          ${{ matrix.beam-version && format('-Dbeam.version={0}', matrix.beam-version) || '' }}
          ${{ steps.test-suite-selector.outputs.it-tests && format('-Dit.test={0}', steps.test-suite-selector.outputs.it-tests) || '' }}
          "-DbeamTestPipelineOptions=[
          \"--runner=TestDataflowRunner\",
          \"--experiments=${{ matrix.experiments }}\",
          \"--tempRoot=${{ secrets.GCP_DATAFLOW_TEMP_ROOT }}\",
          \"--pspHost=${{ secrets.SOLACE_HOST }}\",
          \"--pspUsername=${{ secrets.SOLACE_USERNAME }}\",
          \"--pspPassword=${{ secrets.SOLACE_PASSWORD }}\",
          \"--pspVpnName=${{ secrets.SOLACE_VPN_NAME }}\",
          \"--pspMgmtHost=${{ secrets.SOLACE_MGMT_HOST }}\",
          \"--pspMgmtUsername=${{ secrets.SOLACE_MGMT_USERNAME }}\",
          \"--pspMgmtPassword=${{ secrets.SOLACE_MGMT_PASSWORD }}\"
          ]"
      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test Results (${{ matrix.beam-version }}, ${{ matrix.experiments }})
          path: |
            **/target/failsafe-reports/*.xml
            **/target/surefire-reports/*.xml
